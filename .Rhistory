airquality$Month<-as.factor(airquality$Month)
plot(airquality$Ozone~airquality$Month)
plot(spam$capitalAve~spam$type)
plot(log10(spam$capitalAve+1)~spam$type)
plot(spam$capitalAve~spam$type)
?dist
?t
hCluster = hclust(dist(t(spam[,1:57])))
plot(hCluster)
a<-rnorm[100]
a<-rnorm(10)
a
which.min(a)
?reformulate
ff <- y ~ z + x + w
tt <- terms(ff)
tt
reformulate(names(spam)[1],response="numType")
a = reformulate(names(spam)[1],response="numType")
a
class(a)
dim(spam)
a<-c(10,20)
a
names[a]<-c("x","y")
?table
state.name
?data.read
?read.data
??data.read
?read.table
x<-1:5
x
names(x)
names(x)<-c("a","b","c")
x
names(x)<-c("a","b","c","d","e")
x["a"]
names(x)<-c("asadfsa","b","c","d","e")
x["a"]
x$"a"
x$"a"
x$a
x
x$as
x[as]
x["as"]
state
library(datasets)
airquality
airquality$Oz
install.packages("knitr")
library(jsontile)
library(jsonlite)
json<-fromJSON("https://api.github.com/users/jtleek/repos")
View(json)
names(json)
class(json)
class(json$owner)
class(json[[1,owner]])
class(json[1,owner])
json[1,]
json[[1,]]
json[[1,owner]]
json[[1,name]]
json[[1,"name"]]
class(json[[1,"owner"]])
json[[1,"owner"]]
json$owner
names(json$owner)
json$owner
tail(json$owner)
json$owner[1,]
json$owner[[1,]]
json$owner[1,]
class(json$owner[1,])
json[1,name]
json[1,"name"]
json[1,"owner"]
class(json[1,"owner"])
class(json[1,"name"])
cat(json)
json[json$full_name=="jtleek/datasharing"]
json$full_name=="jtleek/datasharing"
json[json$name=="datasharing",c(1:3)]
names(json)
json[json$name=="datasharing","created_at"]
install.packages("httr")
home<-GET("https://api.github.com/users/jtleek/repos")
library("httr")
home<-GET("https://api.github.com/users/jtleek/repos")
home
class(home)
home<-content(home)
home
names(homes)
names(home)
class(home)
home[1]
home[[1]
]
toJson(home)
toJSON(home)
toJSON(home)
library(jsonLite)
library(jsonlite)
toJSON(home)
toJSON(home,preety=TRUE)
toJSON(home,preYty=TRUE)
toJSON(home,pretty=TRUE)
json2<-toJSON(home,pretty=TRUE)
json2<-fromJSON(json2)
View(json2)
json2$id
class(json2$id)
class(json2[["id"]])
a<-list(1:3,c("a","b","c"))
a
list[1]
a[1]
class(a[1])
class(a[[1])
class(a[[1]])
class(json2)
a<-list(1:20,c("a","b","c"))
a
class(a[[2]])
class(json2)
class(json2$name)
a<-data.frame(1:3,c("a","b","c"))
a<-data.frame(col1<-1:3,col2<-c("a","b","c"))
a
a<-data.frame(col1=1:3,col2=c("a","b","c"))
a
class(a$col1)
json2[,1:2]
json[[1]]
json[[2]]
class(json[[2]])
class(json[[1]])
json2[1]
json2[2]
json[1]
a[1]
a[,1]
class(a[1])
a[,1]
class(a[,1])
a
a[1,]
class(a[1,])
class(json$id)
class(json2$id)
json$id
json2$id
a>-list(1:10,c("a","b","c"))
a<-list(1:10,c("a","b","c"))
a
json2[2,1:3]
json2[2,1]
class(json2[2,1])
install.packages("sqldf")
file<-url("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
read.csv
?read.csv
acs<-read.csv(file)
?nchar
summary(acs)
dim(acs)
sqldf("select pwgtp1 from acs where AGEP   50")
library(sqldf)
sqldf("select * from acs where AGEP<50")
sqldf("select pwgtp1 from acs where AGEP<50")
sqldf("select distinct AGEP from acs")
file<-url("http://biostat.jhsph.edu/~jleek/contact.html")
con<-readlines(file)
con<-readLines(file)
con
cat(con)
class(con)
con
ncha(con[10],con[20],con[30],con[100])
nchar(con[10],con[20],con[30],con[100])
con[10]
?nchar
chars<-c(con[10],con[20],con[30],con[100])
chars
nchar(x)
nchar(chars)
class(con)
con<-readLines(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
con
con[1]
con[2]
con[3]
con[3:1258]
con<-con[3:1258]
con
head(con)
con<-readLines(url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"))
con[1]
con[2]
con[3]
con[1:5]
lenth(con)
length(con)
con[5:1258]
con<-con[5:1258]
con
head(con)
?substr
substr(con[1],29,33)
substr(con[1],29,32)
substr(con,29,32)
?as.numeric
col4<-as.numberic(substr(con,29,32))
col4<-as.numeric(substr(con,29,32))
col4
sum(col4)
sqldf("select distinct AGEP from acs")
AGEP["AGEP"]
acs["AGEP"]
acs[["AGEP"]]
acs$"AGEP"
acs[2]
acs[2,]
library(lattice)
library(datasets)
xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind|Month,data=airquality)
xyplot(Ozone~Wind|Month,data=airquality)
?transform
airquality<-transform(airquality,Month=factor(Month))
xyplot(Ozone~Wind|Month,data=airquality)
f<-rep(0:1)
f
f<-rep(0:1,each=50)
f
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y,...){
panel(x,y,...)
panel.lmline(x,y,col=2)}
)
xyplot(Ozone~Wind|Month,data=airquality)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y,...){
panel(x,y,...)
panel.lmline(x,y,col=2)}
)
xyplot(Ozone~Wind|Month,data=airquality)
xyplot(Ozone~Wind|Month,data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month,data=airquality,layout=c(6,1))
0
xyplot(Ozone~Wind|Month,data=airquality,layout=c(60,1))
xyplot(Ozone~Wind|Month,data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month,data=airquality)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y,...){
panel(x,y,...)
)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y, ...){
panel(x,y, ...)
)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y, ...){
panel(x,y, ...)   }
)
xyplot(Ozone~Wind|Month,layout=c(1,5),data=airquality,panel=function(x,y, ...){
panel(x,y, ...)   }
)
xyplot(Ozone~Wind|Month,layout=c(5,1),data=airquality,panel=function(x,y, ...){
panel(x,y, ...)   }
)
)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(Ozone,Wind, ...){
panel(Ozone,Wind,...)
}
)
?xyplot
set.seed(10)
x<-rnorm(100)
f<-rep(0:1,each=50)
y<-x+f-f*x+rnorm(100,sd=0.5)
f<-factor(f,labels=c("G1","G2"))
xyplot(y~x|f)
xyplot(y~x|f,panel=function(Ozone,Wind, ...){
panel(Ozone,Wind,...)
}
)
xyplot(y~x|f,panel=function(Ozone,Wind, ...){
panel(Ozone,Wind,...)
}
)
source('~/.active-rstudio-document')
xyplot(y~x|f,panel=function(x,y, ...){
panel(x,y,...)
}
)
xyplot(y~x|f,panel=function(x,y, ...){
panel.xyplot(x,y,...)
}
)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(Ozone,Wind, ...){
panel.xyplot(Ozone,Wind,...)
panel.lmline(Ozone,Wind)
}
)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y, ...){
panel.xyplot(x,y,...)
panel.lmline(x,y)
}
)
xyplot(Ozone~Wind|Month,data=airquality,panel=function(x,y, ...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
}
)
install.packages("ggplot2")
library(ggplot2)
length(mpg)
qplot(disp,hwl,data=mpg)
qplot(displ,hwl,data=mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,geom="smooth")
gplog(hwy,data=mpg,fill=drv)
gplot(hwy,data=mpg,fill=drv)
qplot(hwy,data=mpg,fill=drv)
str(maacs)
data(maacs)
library(ggplot2)
str(maacs)
maacs
maacs
str(maacs)
library(dataset)
library(datasets)
str(maacs)
str(maacs)
getpwd()
pwd()
getws
setwd("D:/workspace/RemoteSystemsTempFiles")
getwd()
head(weekdays(activity$date))
activity<-read.csv("activity.csv")
activity<-transform(activity,date=as.Date(date))
activity<-read.csv("activity.csv")
activity<-transform(activity,date=as.Date(date))
setwd("D:/RepData_PeerAssessment1")
activity<-read.csv("activity.csv")
activity<-transform(activity,date=as.Date(date))
setwd("D:/RepData_PeerAssessment1")
head(weekdays(activity$date))
?weekend
unique(weekdays(activity$date))
activity$interval
activity$week<-weekday(activity$date)
activity$week<-weekdays(activity$date)
head(activity)
activity$week<-factor(weekdays(activity$date))
str(activity$week)
levels(activity$week)
?factor
activity[1,week]
activity[1,"week"]
class(activity[1,"week"])
activity[1,"week"]
activity[1,"week"]==7
as.numeric(activity[1,"week"])
factor(weekdays(activity$date))
?weekdays()
weekdays(activity$date,abbreviate=TRUE)
factor(weekdays(activity$date,abbreviate=TRUE))
?factor
factor(weekdays(activity$date,abbreviate=TRUE),ordered=TRUE)
head(weekdays(activity$date,abbreviate=TRUE))
class(activity$date)
weekdays(activity$date)=="星期天"
weekdays(activity$date)
weekdays(activity$date)=="星期日"
weekdays(activity$date)=="星期日"||weekdays(activity$date)=="星期六"
weekdays(activity$date)=="星期日" or weekdays(activity$date)=="星期六"
weekdays(activity$date)=="星期日"||weekdays(activity$date)=="星期六"
weekdays(activity$date)=="星期日"|weekdays(activity$date)=="星期六"
weekdays(activity$date)=="星期日"
factor<-factor(weekdays(activity$date)=="星期日"|weekdays(activity$date)=="星期六")
factor
factor<-factor(weekdays(activity$date)=="星期日"|weekdays(activity$date)=="星期六",labels=c("weekday","weekend"))
factor
str(factor)
weekdays(activity$date)!="星期日"&weekdays(activity$date)!="星期六"
factor(weekdays(activity$date)!="星期日"&weekdays(activity$date)!="星期六")
factor<-factor(weekdays(activity$date)!="星期日"&weekdays(activity$date)!="星期六",labels=c("weekend","weekday"))
factor
library(lattice)
xyplot(names(fiveAvg)~ fiveAvg | f, layout = c(1, 2))
fiveAvg=tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
xyplot(names(fiveAvg)~ fiveAvg | f, layout = c(1, 2))
fiveAvg
xyplot(names(fiveAvg)~ fiveAvg | factor, layout = c(1, 2))
length(names(fiveAvg))
length(fiveAvg)
names(fiveAvg)
factor
factor==weekend
factor=="weekend"
activity[factor=="weekend",$steps]
activity[factor=="weekend",steps]
activity[factor=="weekend",steps]
activity
activity$steps
activity[factor=="weekend",steps]
activity[factor=="weekend","steps"]
interval<-as.character(activity[!complete.cases(activity),"interval"])
fiveAvg=tapply(activity$steps,activity$interval,mean,na.rm=TRUE)
activity2<-activity
activity2[!complete.cases(activity),"steps"]<-fiveAvg[interval]
activity2$[factor=="weekend","interval"]
activity2[factor=="weekend","interval"]
lenght(activity2[factor=="weekend","interval"])
length(activity2[factor=="weekend","interval"])
length(activity2[factor=="weekend","steps"])
fiveAvg_weekday=tapply(activity2[factor=="weekend","steps"],
activity2[factor=="weekend","interval"],mean)
fiveAvg_weekday
fiveAvg
class(fiveAvg)
class(fiveAvg[1])
class(fiveAvg_weekday[1])
class(fiveAvg_weekday)
length(fiveAvg_weekend) + length(fiveAvg_weekday)
fiveAvg_weekend=tapply(activity2[factor=="weekend","steps"],
activity2[factor=="weekend","interval"],mean)
fiveAvg_weekday=tapply(activity2[factor=="weekday","steps"],
activity2[factor=="weekday","interval"],mean)
length(fiveAvg_weekend) + length(fiveAvg_weekday)
length(fiveAvg_weekend)
length(fiveAvg_weekday)
fiveAvg_weekend
fiveAvg_weekend
f<-rep(0:1,each=length(fiveAvg_weekend))
f
length(fiveAvg_weekend)
length(f)
factor(f)
f<-factor(f,labels=labels=c("weekend","weekday"))
f<-factor(f,labels=c("weekend","weekday"))
f
fiveAvg<-c(fiveAvg_weekend,fiveAvg_weekday)
fiveAvg
length(fiveAvg)
names(fiveAvg)
xyplot(names(fiveAvg)~fiveAvg | f, layout = c(1, 2))
xyplot(names(fiveAvg)~fiveAvg, layout = c(1, 2))
xyplot(fiveAvg~names(fiveAvg), layout = c(1, 2))
xyplot(fiveAvg~names(fiveAvg))
?xyplot
class(names(fiveAvg))
class(fiveAvg)
fiveAvg
class(fiveAvg_weekday)
class(fiveAvg_weekend)
class(fiveAvg)
fiveAvg
library(lattice)
xyplot(fiveAvg~names(fiveAvg))
x<-1:10
y<-1:1000
xyplot(y~x)
y<-1:100
y<-1:10
xyplot(y~x)
length(names(fiveAvg))
length(fiveAvg)
class(names(fiveAvg))
unique(activity2$interval)
lenght(unique(activity2$interval))
length(unique(activity2$interval))
?unique
xyplot(unique(activity2$interval)~fiveAvg | f, layout = c(1, 2))
f
names(fiveAvg)
na.integer(names(fiveAvg))
as.integer(names(fiveAvg))
xyplot(y~fiveAvg | f, layout = c(1, 2))
y
y<-as.integer(names(fiveAvg))
y
xyplot(y~fiveAvg | f, layout = c(1, 2))
f<-rep(0:1,each=length(fiveAvg_weekend))
f<-factor(f,labels=c("weekend","weekday"))
x<-c(fiveAvg_weekend,fiveAvg_weekday)
y<-as.integer(names(x))
xyplot(y~x | f, layout = c(1, 2))
?xplot
?xyplot
f<-rep(0:1,each=length(fiveAvg_weekend))
f<-factor(f,labels=c("weekend","weekday"))
y<-c(fiveAvg_weekend,fiveAvg_weekday)
x<-as.integer(names(y))
xyplot(y~x | f, layout = c(1, 2))
f
xyplot(y~x | f, layout = c(1, 2),panel = lattice.getOption("panel.lines"),
xlab="interval",ylab="Number of steps")
xyplot(y~x | f, layout = c(1, 2),
xlab="interval",ylab="Number of steps")
?panel
xyplot(y~x | f, layout = c(1, 2),panel=lattice.getOption("panel.xyplot","type=l"))
?panel.xyplot
xyplot(y ~ x | f, panel = function(x, y, ...) {
panel.xyplot(x, y,type='l')
})
xyplot(y~x | f, layout = c(1, 2),xlab="interval",ylab="Number of steps"
panel = function(x, y, ...) {panel.xyplot(x, y,type='l')} )
xyplot(y~x | f, layout = c(1, 2),xlab="interval",ylab="Number of steps",
panel = function(x, y, ...) {panel.xyplot(x, y,type='l')} )
